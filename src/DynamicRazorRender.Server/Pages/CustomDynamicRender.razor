@using DynamicRazorRender.Shared;
@using Microsoft.JSInterop;
@using Masa.Blazor.Extensions.Languages.Razor;
@using Microsoft.AspNetCore.Components;
@using DynamicRazorRender.Server.Events;
@implements IDisposable

@if (componentType == null)
{
    @if(CompileError){
        <pre>
            <code>
                @CompileErrorMessage
            </code>
        </pre>
    }
    else{
        <h1>Loading...</h1>
    }
}
else
{
    <MApp>
        <DynamicComponent Type="componentType"></DynamicComponent>
    </MApp>
}

@code {
    private IJSObjectReference? _jsModule;

    protected Type? componentType;

    [Inject]
    protected EventBus<string>? _eventCenter { get; set; }

    [Inject]
    protected IJSRuntime? _jsRuntime { get; set; }

    [Inject]
    protected IServiceProvider? _serviceProvider { get; set; }

    [Inject]
    private ILogger<CustomDynamicRender>? _logger { get; set; }

    private bool CompileError { get; set; } = false;
    private string CompileErrorMessage { get; set; } = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            _jsModule = await _jsRuntime!.InvokeAsync<IJSObjectReference>("import", "./Pages/CustomDynamicRender.razor.js");
                
            await _jsModule!.InvokeVoidAsync("emitPageLoaded"); // 页面第一次渲染完成发出信号
        }

    }

    protected override void OnInitialized()
    {
        RegisterEventBus();
        base.OnInitialized();
    }

    private List<Subscription?> subscriptions { get; set; } = new List<Subscription?>();

    protected void RegisterEventBus()
    {        
        var subscription1 = _eventCenter?.Subscribe(CustomEventConstants.RenderFromFile, async (filepath) => {
            if(string.IsNullOrWhiteSpace(filepath))
            {
                throw new ArgumentNullException(nameof(filepath), "路径为空");
            }

            if(!File.Exists(filepath)){
                throw new FileNotFoundException("文件不存在", filepath);
            }

            string? code;
            using(var stream = new FileStream(filepath, FileMode.Open, FileAccess.Read))
            {
                using(var reader = new StreamReader(stream))
                {
                    code = await reader.ReadToEndAsync();
                }
            }
                        
            await CompileCode(code);
        });

        this.subscriptions.Add(subscription1);

        var subscription2 =  _eventCenter?.Subscribe(CustomEventConstants.RenderFromPlain, async (plainText) => {
            await CompileCode(plainText);
        });

        this.subscriptions.Add(subscription2);
    }

    protected async Task CompileCode(string code)
    {
        try 
        {
            componentType = RazorCompile.CompileToType(
                new CompileRazorOptions{
                    Code = code,
                    ConcurrentBuild = false,
                }
            );

            CompileError = false;
            CompileErrorMessage = string.Empty;
        }
        catch(Exception ex)
        {
            CompileError = true;
            CompileErrorMessage = ex.ToString();
            _logger?.LogError(ex, "编译组件失败");     
            await PostError(ex);
        }
        
        _ = InvokeAsync(StateHasChanged);
    }

    protected async Task PostError(Exception ex){
        await _jsRuntime!.InvokeVoidAsync(
            "window.postMessage",
            new {
                type = "error",
                message = ex.Message,
                details = ex.ToString()
            }
        );
    }

    public void Dispose()
    {
        foreach(var subscription in subscriptions){
            if(subscription != null){
                _eventCenter?.UnSubscribe(subscription);
            }
        }
    }
}
@* #pragma warning restore 1998
#nullable restore
#line 4 "d:/Playground/repos/DynamicRenderRazorDemoInJs/src/DynamicRazorRender.Server/Pages/CustomDynamicRender.razor" *@





